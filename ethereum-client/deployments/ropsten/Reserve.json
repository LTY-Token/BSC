{
  "address": "0x7f3CF10F02d68A66FeD15C7731B9c7ae18a2f50c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "TOKEN",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "USDC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdcAmount",
          "type": "uint256"
        }
      ],
      "name": "BuyAndBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdcAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapAndCollect",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenSwapped",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdcReceived",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIntoLiqudity",
          "type": "uint256"
        }
      ],
      "name": "SwapAndLiquify",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usdcAmount",
          "type": "uint256"
        }
      ],
      "name": "buyAndBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "swapAndCollect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "swapAndLiquify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ILedgity",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x528edbf96087080af77207f5189d0b0ae7becf0bb54c6103da5202f4c253c7c9",
  "receipt": {
    "to": null,
    "from": "0xc28Bf645b0ae0605747283A80553d54201D31544",
    "contractAddress": "0x7f3CF10F02d68A66FeD15C7731B9c7ae18a2f50c",
    "transactionIndex": 7,
    "gasUsed": "3653960",
    "logsBloom": "0x
    "blockHash": "0xb45b945c38f54e7557d6077c5a77b20092165ca85c50500b4b91b27804fa3fe7",
    "transactionHash": "0x528edbf96087080af77207f5189d0b0ae7becf0bb54c6103da5202f4c253c7c9",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 10784265,
        "transactionHash": "0x528edbf96087080af77207f5189d0b0ae7becf0bb54c6103da5202f4c253c7c9",
        "address": "0x7f3CF10F02d68A66FeD15C7731B9c7ae18a2f50c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c28bf645b0ae0605747283a80553d54201d31544"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0xb45b945c38f54e7557d6077c5a77b20092165ca85c50500b4b91b27804fa3fe7"
      },
      {
        "transactionIndex": 7,
        "blockNumber": 10784265,
        "transactionHash": "0x528edbf96087080af77207f5189d0b0ae7becf0bb54c6103da5202f4c253c7c9",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x00000000000000000000000007865c6e87b9f70255377e024ace6630c1eaa37f",
          "0x000000000000000000000000206b533f3aa375c9226ff756e32feaab91f64a4a"
        ],
        "data": "0x0000000000000000000000005073d85020805b5ef207e243b76fdffaec743ad60000000000000000000000000000000000000000000000000000000000007916",
        "logIndex": 12,
        "blockHash": "0xb45b945c38f54e7557d6077c5a77b20092165ca85c50500b4b91b27804fa3fe7"
      }
    ],
    "blockNumber": 10784265,
    "cumulativeGasUsed": "4398515",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0x206B533f3AA375C9226fF756E32feaAB91F64A4A",
    "0x07865c6E87B9F70255377e024ace6630C1Eaa37F",
    "0x85D271714Eb4Bc2c01f1Ead4a85cE0017E10c579"
  ],
  "solcInputHash": "b4e00942305c44a42600c642f088b50f",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"TOKEN\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"USDC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"BuyAndBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"SwapAndCollect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"buyAndBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"swapAndCollect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"swapAndLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ILedgity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyAndBurn(uint256)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swapAndCollect(uint256)\":{\"details\":\"Returns the amount of tokens in existence.\"},\"swapAndLiquify(uint256)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Reserve.sol\":\"Reserve\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Reserve.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nimport \\\"./libraries/Ownable.sol\\\";\\nimport \\\"./libraries/SafeMath.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"./interfaces/IUniswapV2Pair.sol\\\";\\nimport \\\"./interfaces/IUniswapV2Router02.sol\\\";\\nimport \\\"./interfaces/ILedgity.sol\\\";\\nimport \\\"./interfaces/IReserve.sol\\\";\\n\\n\\ncontract Reserve is IReserve, Ownable {\\n    using SafeMath for uint256;\\n\\n    IUniswapV2Router02 public uniswapV2Router;\\n    IUniswapV2Pair public override uniswapV2Pair;\\n    ILedgity public token;\\n    IERC20 public usdc;\\n    address public immutable timelock;\\n\\n    modifier onlyToken {\\n        require(msg.sender == address(token), \\\"Reserve: caller is not the token\\\");\\n        _;\\n    }\\n\\n    constructor(address uniswapRouter, address TOKEN, address USDC, address timelock_) public {\\n        require(timelock_ != address(0), \\\"Reserve: invalid timelock address\\\");\\n        uniswapV2Router = IUniswapV2Router02(uniswapRouter);\\n        token = ILedgity(TOKEN);\\n        usdc = IERC20(USDC);\\n        timelock = timelock_;\\n        uniswapV2Pair = IUniswapV2Pair(\\n            IUniswapV2Factory(IUniswapV2Router02(uniswapRouter).factory())\\n                .createPair(TOKEN, USDC)\\n        );\\n    }\\n\\n    function buyAndBurn(uint256 usdcAmount) external override onlyOwner {\\n        address[] memory path = new address[](2);\\n        path[0] = address(usdc);\\n        path[1] = address(token);\\n        uint256 tokenBalanceBefore = token.balanceOf(address(this));\\n        SafeERC20.safeApprove(address(usdc) ,address(uniswapV2Router), usdcAmount);\\n        uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n            usdcAmount,\\n            0, // accept any amount of token\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n        uint256 tokensSwapped = token.balanceOf(address(this)).sub(tokenBalanceBefore);\\n        require(token.burn(tokensSwapped), \\\"Reserve: burn failed\\\");\\n        emit BuyAndBurn(tokensSwapped, usdcAmount);\\n    }\\n\\n    function swapAndCollect(uint256 tokenAmount) external override onlyToken {\\n        uint256 usdcReceived = _swapTokensForUSDC(tokenAmount);\\n        emit SwapAndCollect(tokenAmount, usdcReceived);\\n    }\\n\\n    function swapAndLiquify(uint256 tokenAmount) external override onlyToken {\\n        uint256 tokenBalance = token.balanceOf(address(this));\\n        uint256 half = tokenAmount;\\n        uint256 otherHalf = tokenAmount;\\n        if (tokenBalance < tokenAmount.mul(2)) {\\n            half = tokenBalance.div(2);\\n            otherHalf = tokenBalance.sub(half);\\n        }\\n\\n        uint256 usdcReceived = _swapTokensForUSDC(otherHalf);\\n        // Add liquidity mannualy instead of using the router.\\n        // This allows us to add liquidity in proportion we want, regardless of current pool reserves.\\n        // Adding liquidity must:\\n        //   1. Transfer both tokens to the pair\\n        //   2. Mint LP tokens to some address.\\n        SafeERC20.safeTransfer(address(token), address(uniswapV2Pair), half);\\n        SafeERC20.safeTransfer(address(usdc), address(uniswapV2Pair), usdcReceived);\\n        uniswapV2Pair.mint(timelock);\\n        emit SwapAndLiquify(otherHalf, usdcReceived, half);\\n    }\\n\\n    function _swapTokensForUSDC(uint256 tokenAmount) private returns (uint256) {\\n        address[] memory path = new address[](2);\\n        path[0] = address(token);\\n        path[1] = address(usdc);\\n        uint256 usdcBalanceBefore = usdc.balanceOf(address(this));\\n        SafeERC20.safeApprove(address(token) ,address(uniswapV2Router), tokenAmount);\\n        uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n            tokenAmount,\\n            0, // accept any amount of USDC\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n        uint256 usdcSwapped = usdc.balanceOf(address(this)).sub(usdcBalanceBefore);\\n        return usdcSwapped;\\n    }\\n}\\n\",\"keccak256\":\"0x3f4e4d5b97fd24a92844e83857a80ac61481e96fa37b69956e1385b0337fdfab\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x98cb90765f215549fa80f4ecab5207457dc75ef2e17957954cc1ff02a6ace246\"},\"contracts/interfaces/ILedgity.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n\\ninterface ILedgity is IERC20 {\\n    function burn(uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd455fa7d57ffe53f62d78cb3d93e82eee2a3fbab373b4ebe81a1567d23452ae7\"},\"contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nimport \\\"./IUniswapV2Pair.sol\\\";\\n\\n\\ninterface IReserve {\\n    function uniswapV2Pair() external returns (IUniswapV2Pair);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function swapAndCollect(uint256 tokenAmount) external;\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function swapAndLiquify(uint256 tokenAmount) external;\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function buyAndBurn(uint256 usdcAmount) external;\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event BuyAndBurn(uint256 tokenAmount, uint256 usdcAmount);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event SwapAndCollect(uint256 tokenAmount, uint256 usdcAmount);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event SwapAndLiquify(\\n        uint256 tokenSwapped,\\n        uint256 usdcReceived,\\n        uint256 tokensIntoLiqudity\\n    );\\n}\\n\",\"keccak256\":\"0x98c4e10b14384e7c2e45ea15b90a78da7090d8421df04ce13bf445810d0ea907\"},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xc869b21c0a9bc523f2ddd09beb3fdae79b37eac49ed5a6fe1d4a55d919f613bf\"},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0xd66ffba293ecbcb52d6b60c584c5f2c9d93f9f6001001635e2c06a7db973f3a2\"},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0xc754e33b863705e24f8dce40cd705bdf5e1b81095952829773eca06ef4b66138\"},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nimport \\\"./IUniswapV2Router01.sol\\\";\\n\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2b5582e3f17b222653009f6910f65a4c55b7e3a08e5f5cbc94ea301a6efed8ed\"},\"contracts/libraries/Context.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xa8ed5bc722107d4edef25a726d5c120e7f53a97b689f7e401093efcd921c286b\"},\"contracts/libraries/Ownable.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nimport \\\"./Context.sol\\\";\\n\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () public {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() external virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) external virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x4b156282d021c0245e499de14e6f6c6f1472d2d6f33a4888dd6adad8337d65ff\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\n\\nlibrary SafeERC20 {\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'SafeERC20::safeTransfer: transfer failed'\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'SafeERC20::transferFrom: transferFrom failed'\\n        );\\n    }\\n\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'SafeERC20::safeApprove: approve failed'\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x58fad012a28db16c8b3b1e60a5da6023d126ff1dbb079892e189a72090fe4890\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x169d02c36bb73cf2ff63e1d38d7d23bb0a6004615bfa81ae56e6ee53632e6166\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200145f3803806200145f8339818101604052608081101561003557600080fd5b5080516020820151604083015160609093015191929091600061005661023b565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100e65760405162461bcd60e51b81526004018080602001828103825260218152602001806200143e6021913960400191505060405180910390fd5b600180546001600160a01b038087166001600160a01b031992831681179093556003805487831690841617905560048054918616919092161781556001600160601b0319606084901b166080526040805163c45a015560e01b8152905163c45a015592828101926020929190829003018186803b15801561016657600080fd5b505afa15801561017a573d6000803e3d6000fd5b505050506040513d602081101561019057600080fd5b5051604080516364e329cb60e11b81526001600160a01b03868116600483015285811660248301529151919092169163c9c653969160448083019260209291908290030181600087803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b5051600280546001600160a01b0319166001600160a01b039092169190911790555061023f92505050565b3390565b60805160601c6111dc62000262600039806102f9528061091552506111dc6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461011e5780638da5cb5b14610126578063957de5b41461012e578063d33219b41461014b578063f2fde38b14610153578063fc0c546a14610179576100a9565b80631694505e146100ae578063173865ad146100d257806334e6436c146100f15780633e413bee1461010e57806349bd5a5e14610116575b600080fd5b6100b6610181565b604080516001600160a01b039092168252519081900360200190f35b6100ef600480360360208110156100e857600080fd5b5035610190565b005b6100ef6004803603602081101561010757600080fd5b50356103c0565b6100b6610786565b6100b6610795565b6100ef6107a4565b6100b6610858565b6100ef6004803603602081101561014457600080fd5b5035610867565b6100b6610913565b6100ef6004803603602081101561016957600080fd5b50356001600160a01b0316610937565b6100b6610a41565b6001546001600160a01b031681565b6003546001600160a01b031633146101ef576040805162461bcd60e51b815260206004820181905260248201527f526573657276653a2063616c6c6572206973206e6f742074686520746f6b656e604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561023a57600080fd5b505afa15801561024e573d6000803e3d6000fd5b505050506040513d602081101561026457600080fd5b505190508180610275816002610a50565b83101561029657610287836002610ab2565b91506102938383610af4565b90505b60006102a182610b36565b6003546002549192506102c1916001600160a01b03918216911685610d70565b6004546002546102de916001600160a01b03908116911683610d70565b600254604080516335313c2160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291519190921691636a6278429160248083019260209291908290030181600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b505050506040513d602081101561037757600080fd5b5050604080518381526020810183905280820185905290517f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619181900360600190a15050505050565b6103c8610ec4565b6000546001600160a01b0390811691161461042a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040805160028082526060808301845292602083019080368337505060045482519293506001600160a01b03169183915060009061046457fe5b6001600160a01b03928316602091820292909201015260035482519116908290600190811061048f57fe5b6001600160a01b03928316602091820292909201810191909152600354604080516370a0823160e01b8152306004820152905160009492909216926370a0823192602480840193829003018186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d602081101561051457600080fd5b5051600454600154919250610536916001600160a01b03918216911685610ec8565b600154604051635c11d79560e01b8152600481018581526000602483018190523060648401819052426084850181905260a060448601908152885160a487015288516001600160a01b0390971696635c11d795968b968b9594939092909160c40190602080880191028083838b5b838110156105bc5781810151838201526020016105a4565b505050509050019650505050505050600060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b5050600354604080516370a0823160e01b8152306004820152905160009450610680935085926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561064e57600080fd5b505afa158015610662573d6000803e3d6000fd5b505050506040513d602081101561067857600080fd5b505190610af4565b60035460408051630852cd8d60e31b81526004810184905290519293506001600160a01b03909116916342966c68916024808201926020929091908290030181600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050506040513d60208110156106fb57600080fd5b5051610745576040805162461bcd60e51b815260206004820152601460248201527314995cd95c9d994e88189d5c9b8819985a5b195960621b604482015290519081900360640190fd5b604080518281526020810186905281517f3dcdee83a97284b298a1d5197ac6adf342aa15c061ded0d9318e9b7bf6879cd2929181900390910190a150505050565b6004546001600160a01b031681565b6002546001600160a01b031681565b6107ac610ec4565b6000546001600160a01b0390811691161461080e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6003546001600160a01b031633146108c6576040805162461bcd60e51b815260206004820181905260248201527f526573657276653a2063616c6c6572206973206e6f742074686520746f6b656e604482015290519081900360640190fd5b60006108d182610b36565b604080518481526020810183905281519293507f0c04c56ec8d6277982721e58bb8ab9b468ae47a1645b3e20c5fac70320bde082929081900390910190a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61093f610ec4565b6000546001600160a01b039081169116146109a1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109e65760405162461bcd60e51b81526004018080602001828103825260268152602001806111386026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b600082610a5f57506000610aac565b82820282848281610a6c57fe5b0414610aa95760405162461bcd60e51b815260040180806020018281038252602181526020018061115e6021913960400191505060405180910390fd5b90505b92915050565b6000610aa983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611015565b6000610aa983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110b7565b6040805160028082526060808301845260009390929190602083019080368337505060035482519293506001600160a01b031691839150600090610b7657fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110610ba157fe5b6001600160a01b0392831660209182029290920181019190915260048054604080516370a0823160e01b815230938101939093525160009491909116926370a082319260248082019391829003018186803b158015610bff57600080fd5b505afa158015610c13573d6000803e3d6000fd5b505050506040513d6020811015610c2957600080fd5b5051600354600154919250610c4b916001600160a01b03918216911686610ec8565b600154604051635c11d79560e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152885160a487015288516001600160a01b0390971696635c11d795968c968b9594939092909160c40190602080880191028083838b5b83811015610cd1578181015183820152602001610cb9565b505050509050019650505050505050600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505060048054604080516370a0823160e01b815230938101939093525160009450610d67935085926001600160a01b03909216916370a08231916024808301926020929190829003018186803b15801561064e57600080fd5b95945050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310610ded5780518252601f199092019160209182019101610dce565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610e4f576040519150601f19603f3d011682016040523d82523d6000602084013e610e54565b606091505b5091509150818015610e82575080511580610e825750808060200190516020811015610e7f57600080fd5b50515b610ebd5760405162461bcd60e51b815260040180806020018281038252602881526020018061117f6028913960400191505060405180910390fd5b5050505050565b3390565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b178152925182516000946060949389169392918291908083835b60208310610f455780518252601f199092019160209182019101610f26565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610fa7576040519150601f19603f3d011682016040523d82523d6000602084013e610fac565b606091505b5091509150818015610fda575080511580610fda5750808060200190516020811015610fd757600080fd5b50515b610ebd5760405162461bcd60e51b81526004018080602001828103825260268152602001806111126026913960400191505060405180910390fd5b600081836110a15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561106657818101518382015260200161104e565b50505050905090810190601f1680156110935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816110ad57fe5b0495945050505050565b600081848411156111095760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561106657818101518382015260200161104e565b50505090039056fe5361666545524332303a3a73616665417070726f76653a20617070726f7665206661696c65644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212207c518a112e1638c86bab4fc9a0b0a70e3a2fc5fdb9e4974c57dda1220ef94d9264736f6c634300060c0033526573657276653a20696e76616c69642074696d656c6f636b2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461011e5780638da5cb5b14610126578063957de5b41461012e578063d33219b41461014b578063f2fde38b14610153578063fc0c546a14610179576100a9565b80631694505e146100ae578063173865ad146100d257806334e6436c146100f15780633e413bee1461010e57806349bd5a5e14610116575b600080fd5b6100b6610181565b604080516001600160a01b039092168252519081900360200190f35b6100ef600480360360208110156100e857600080fd5b5035610190565b005b6100ef6004803603602081101561010757600080fd5b50356103c0565b6100b6610786565b6100b6610795565b6100ef6107a4565b6100b6610858565b6100ef6004803603602081101561014457600080fd5b5035610867565b6100b6610913565b6100ef6004803603602081101561016957600080fd5b50356001600160a01b0316610937565b6100b6610a41565b6001546001600160a01b031681565b6003546001600160a01b031633146101ef576040805162461bcd60e51b815260206004820181905260248201527f526573657276653a2063616c6c6572206973206e6f742074686520746f6b656e604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561023a57600080fd5b505afa15801561024e573d6000803e3d6000fd5b505050506040513d602081101561026457600080fd5b505190508180610275816002610a50565b83101561029657610287836002610ab2565b91506102938383610af4565b90505b60006102a182610b36565b6003546002549192506102c1916001600160a01b03918216911685610d70565b6004546002546102de916001600160a01b03908116911683610d70565b600254604080516335313c2160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291519190921691636a6278429160248083019260209291908290030181600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b505050506040513d602081101561037757600080fd5b5050604080518381526020810183905280820185905290517f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619181900360600190a15050505050565b6103c8610ec4565b6000546001600160a01b0390811691161461042a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040805160028082526060808301845292602083019080368337505060045482519293506001600160a01b03169183915060009061046457fe5b6001600160a01b03928316602091820292909201015260035482519116908290600190811061048f57fe5b6001600160a01b03928316602091820292909201810191909152600354604080516370a0823160e01b8152306004820152905160009492909216926370a0823192602480840193829003018186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d602081101561051457600080fd5b5051600454600154919250610536916001600160a01b03918216911685610ec8565b600154604051635c11d79560e01b8152600481018581526000602483018190523060648401819052426084850181905260a060448601908152885160a487015288516001600160a01b0390971696635c11d795968b968b9594939092909160c40190602080880191028083838b5b838110156105bc5781810151838201526020016105a4565b505050509050019650505050505050600060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b5050600354604080516370a0823160e01b8152306004820152905160009450610680935085926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561064e57600080fd5b505afa158015610662573d6000803e3d6000fd5b505050506040513d602081101561067857600080fd5b505190610af4565b60035460408051630852cd8d60e31b81526004810184905290519293506001600160a01b03909116916342966c68916024808201926020929091908290030181600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050506040513d60208110156106fb57600080fd5b5051610745576040805162461bcd60e51b815260206004820152601460248201527314995cd95c9d994e88189d5c9b8819985a5b195960621b604482015290519081900360640190fd5b604080518281526020810186905281517f3dcdee83a97284b298a1d5197ac6adf342aa15c061ded0d9318e9b7bf6879cd2929181900390910190a150505050565b6004546001600160a01b031681565b6002546001600160a01b031681565b6107ac610ec4565b6000546001600160a01b0390811691161461080e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6003546001600160a01b031633146108c6576040805162461bcd60e51b815260206004820181905260248201527f526573657276653a2063616c6c6572206973206e6f742074686520746f6b656e604482015290519081900360640190fd5b60006108d182610b36565b604080518481526020810183905281519293507f0c04c56ec8d6277982721e58bb8ab9b468ae47a1645b3e20c5fac70320bde082929081900390910190a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61093f610ec4565b6000546001600160a01b039081169116146109a1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109e65760405162461bcd60e51b81526004018080602001828103825260268152602001806111386026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b600082610a5f57506000610aac565b82820282848281610a6c57fe5b0414610aa95760405162461bcd60e51b815260040180806020018281038252602181526020018061115e6021913960400191505060405180910390fd5b90505b92915050565b6000610aa983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611015565b6000610aa983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110b7565b6040805160028082526060808301845260009390929190602083019080368337505060035482519293506001600160a01b031691839150600090610b7657fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110610ba157fe5b6001600160a01b0392831660209182029290920181019190915260048054604080516370a0823160e01b815230938101939093525160009491909116926370a082319260248082019391829003018186803b158015610bff57600080fd5b505afa158015610c13573d6000803e3d6000fd5b505050506040513d6020811015610c2957600080fd5b5051600354600154919250610c4b916001600160a01b03918216911686610ec8565b600154604051635c11d79560e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152885160a487015288516001600160a01b0390971696635c11d795968c968b9594939092909160c40190602080880191028083838b5b83811015610cd1578181015183820152602001610cb9565b505050509050019650505050505050600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505060048054604080516370a0823160e01b815230938101939093525160009450610d67935085926001600160a01b03909216916370a08231916024808301926020929190829003018186803b15801561064e57600080fd5b95945050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310610ded5780518252601f199092019160209182019101610dce565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610e4f576040519150601f19603f3d011682016040523d82523d6000602084013e610e54565b606091505b5091509150818015610e82575080511580610e825750808060200190516020811015610e7f57600080fd5b50515b610ebd5760405162461bcd60e51b815260040180806020018281038252602881526020018061117f6028913960400191505060405180910390fd5b5050505050565b3390565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b178152925182516000946060949389169392918291908083835b60208310610f455780518252601f199092019160209182019101610f26565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610fa7576040519150601f19603f3d011682016040523d82523d6000602084013e610fac565b606091505b5091509150818015610fda575080511580610fda5750808060200190516020811015610fd757600080fd5b50515b610ebd5760405162461bcd60e51b81526004018080602001828103825260268152602001806111126026913960400191505060405180910390fd5b600081836110a15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561106657818101518382015260200161104e565b50505050905090810190601f1680156110935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816110ad57fe5b0495945050505050565b600081848411156111095760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561106657818101518382015260200161104e565b50505090039056fe5361666545524332303a3a73616665417070726f76653a20617070726f7665206661696c65644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212207c518a112e1638c86bab4fc9a0b0a70e3a2fc5fdb9e4974c57dda1220ef94d9264736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyAndBurn(uint256)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swapAndCollect(uint256)": {
        "details": "Returns the amount of tokens in existence."
      },
      "swapAndLiquify(uint256)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4413,
        "contract": "contracts/Reserve.sol:Reserve",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2673,
        "contract": "contracts/Reserve.sol:Reserve",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IUniswapV2Router02)4383"
      },
      {
        "astId": 2676,
        "contract": "contracts/Reserve.sol:Reserve",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IUniswapV2Pair)3987"
      },
      {
        "astId": 2678,
        "contract": "contracts/Reserve.sol:Reserve",
        "label": "token",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ILedgity)3560"
      },
      {
        "astId": 2680,
        "contract": "contracts/Reserve.sol:Reserve",
        "label": "usdc",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC20)3547"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)3547": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ILedgity)3560": {
        "encoding": "inplace",
        "label": "contract ILedgity",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Pair)3987": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Pair",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router02)4383": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      }
    }
  }
}